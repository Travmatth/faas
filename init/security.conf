# a drop-in for the httpd.service unit, enabling sandboxing features of systemd
[Service]
# If set, a UNIX user and group pair is allocated dynamically when the unit is
# started, and released as soon as it is stopped. User and group not be added to
# /etc/passwd or /etc/group, but are managed transiently during runtime. The
# user and group name to use may be configured via User= and Group=
# If a statically allocated user or group of the configured name already exists,
# it is used and no dynamic user/group is allocated.
# Note that if User= is specified and the static group with the name exists,
# then it is required that the static user with the name already exists.
# Similarly, if Group= is specified and the static user with the name exists,
# then it is required that the static group with the name already exists.
# Dynamic users/groups are allocated from the UID/GID range 61184â€¦65519.
# It is recommended to avoid this range for regular system or login users.
DynamicUser=true
# CacheDirectory=
# StateDirectory=
# ConfigurationDirectory=
LogsDirectory=/var/logs/faas

# NoNewPrivileges= and RestrictSUIDSGID= are implicitly enabled (with dynamic
# user) (and cannot be disabled), to ensure that processes invoked cannot take
# benefit or create SUID/SGID files or directories. 
# NoNewPrivileges=true
# RestrictSUIDSGID=true

# ProtectSystem=strict and ProtectHome=read-only are implied by DynamicUser
# thus prohibiting the service to write to arbitrary file system locations.
# In order to allow the service to write to certain directories, they have to be
# allow-listed using ReadWritePaths=, but care must be taken so that UID/GID
# recycling doesn't create security issues involving files created by service.
# ProtectSystem=strict
# ProtectHome=read-only

# If DynamicUser= is enabled, RemoveIPC= and PrivateTmp= are implied (and cannot
# be turned off). Since /tmp/ and /var/tmp/ are usually the only world-writable
# directories on a system this ensures that a unit making use of dynamic
# user/group allocation cannot leave files around after unit termination.
# RemoveIPC=true
# PrivateTmp=true

# Accepts a whitelist and blacklist of privileged capabilities for the unit.
CapabilityBoundingSet=CAP_NET_BIND_SERVICE CAP_DAC_READ_SEARCH
# restrict all or a subset of namespaces to the service
# net, ipc needed for service
RestrictNamespaces=cgroup mnt pid uts
# Disables modification of /proc and /sys.
ProtectKernelTunables=yes
# Prohibits un/loading modules and masks /usr/lib/modules from service
ProtectKernelModules=yes
# Disables write access to /sys/fs/cgroup/.
ProtectControlGroups=yes
# Create private /dev namespace containing only pseudo devices
# which do not give access to actual hardware.
# It also disables CAP_MKNOD so that new device nodes cannot be created.
PrivateDevices=yes
# Disables memory mapping that is simultaneously writeable and executable.
MemoryDenyWriteExecute=true
